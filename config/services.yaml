# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    commonmark.config:
        renderer:
          block_separator: "\n"
          inner_separator: "\n"
          soft_break: "\n"
        enable_em: true,
        enable_strong: true,
        use_asterisk: true,
        use_underscore: true,
        html_input: 'escape'
        allow_unsafe_links: false

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    _instanceof:
        App\Helper\Problems\History\PropertyValueStrategyInterface:
            tags: [ 'app.problem_history_value_strategy' ]

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    LightSaml\SpBundle\Security\User\UsernameMapperInterface:
        alias: lightsaml_sp.username_mapper.simple

    App\EventListener\ProblemListener:
        tags:
            - doctrine.event_subscriber

    # COMMANDS
    SchulIT\CommonBundle\Command\SendMailsCommand:
      arguments:
        $messageLimit: '%env(int:MAILER_LIMIT)%'
      tags:
        - { name: shapecode_cron.cron_job, expression: '*\/2 * * * *' }

    SchulIT\CommonBundle\Command\CreateCertificateCommand:
        arguments:
            $types:
              saml:
                  keyFile: '%sp_cert_key%'
                  certFile: '%sp_cert_file%'


    # Flysystem
    League\Flysystem\FilesystemInterface:
        alias: 'oneup_flysystem.uploads_filesystem'

    # Controller
    App\Controller\MarkdownController:
      arguments:
        $baseUrl: '%env(APP_URL)%'

    # Markdown
    League\CommonMark\Extension\CommonMarkCoreExtension: ~

    League\CommonMark\EnvironmentInterface:
      class: League\CommonMark\Environment
      arguments:
        $config: "%commonmark.config%"
      calls:
        - [ addExtension, [ "@League\\CommonMark\\Extension\\CommonMarkCoreExtension" ] ]
        - [ addExtension, [ "@App\\Markdown\\MarkdownExtension" ] ]

    League\CommonMark\MarkdownConverterInterface:
      class: League\CommonMark\MarkdownConverter
      arguments:
        $environment: "@League\\CommonMark\\EnvironmentInterface"

    League\CommonMark\CommonMarkConverter:
        class: League\CommonMark\CommonMarkConverter
        arguments:
          $config: "%commonmark.config%"

    EasySlugger\SluggerInterface:
      class: EasySlugger\Utf8Slugger

    # Notifications
    App\Notification\EmailNotificationListener:
      arguments:
        $from: "%env(MAILER_FROM)%"

    App\Helper\Placards\PdfExporter:
      arguments:
        $version: "%version%"

    # Menu
    App\Menu\Builder:
      arguments:
        $idpProfileUrl: '%env(IDP_PROFILE_URL)%'
      tags:
        - { name: knp_menu.menu_builder, method: mainMenu, alias: mainMenu }
        - { name: knp_menu.menu_builder, method: userMenu, alias: userMenu }
        - { name: knp_menu.menu_builder, method: adminMenu, alias: adminMenu }
        - { name: knp_menu.menu_builder, method: servicesMenu, alias: servicesMenu }

    SchulIT\CommonBundle\Menu\Voter:
      tags:
        - { name: knp_menu.voter }

    # Session storage
    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
      arguments:
          - '%env(DATABASE_URL)%'

    # Services
    App\Helper\Problems\History\HistoryResolver:
        bind:
            $strategies: !tagged app.problem_history_value_strategy

    SchulIT\CommonBundle\EventSubscriber\SamlExceptionSubscriber:
      arguments:
        $retryRoute: 'dashboard'
        $loggedInRoute: 'dashboard'

    # DARK MODE:
    SchulIT\CommonBundle\DarkMode\DarkModeManagerInterface:
      class: App\DarkMode\DarkModeManager

    # Security
    App\Security\CronUserProvider:
      arguments:
        $username: 'cron'
        $password: '%env(CRON_PASSWORD)%'

    # Flysystem
    League\Flysystem\Plugin\ListFiles: ~